{
	"info": {
		"_postman_id": "e834305d-7f19-4567-a707-29a9a0eac022",
		"name": "RevueCraftersExam",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28844471",
		"_collection_link": "https://bold-star-554984.postman.co/workspace/837ddd5c-6516-41ba-8b67-53c3f0977758/collection/28844471-e834305d-7f19-4567-a707-29a9a0eac022?action=share&source=collection_link&creator=28844471"
	},
	"item": [
		{
			"name": "Login and Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responsData = pm.response.json();\r",
							"pm.collectionVariables.set(\"accessToken\", responsData.accessToken);\r",
							"\r",
							"pm.test(\"Response body has email, password and accessToken\", function(){\r",
							"    pm.expect(responsData.email).to.not.be.empty\r",
							"    pm.expect(responsData.password).to.not.be.empty\r",
							"    pm.expect(responsData.accessToken).to.not.be.empty\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"kuku@test.bg\",\r\n    \"password\": \"12345!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Revue",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomNum = Math.floor(Math.random() * 1000);\r",
							"var randomTitle = 'Desi' + randomNum;\r",
							"\r",
							"pm.collectionVariables.set('randomTitle', randomTitle);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responsData = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Response message is 'Successfully created!'\", function(){\r",
							"    pm.expect(responsData.msg).to.eql('Successfully created!')\r",
							"})\r",
							"\r",
							"const revueTItle = pm.collectionVariables.get('randomTitle')\r",
							"\r",
							"pm.test(\"Revue title and description are correct\", function(){\r",
							"    pm.expect(responsData.revue.title).to.eql(revueTItle);\r",
							"    \r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"title\": \"{{randomTitle}}\",\r\n\"description\": \"Some description {{randomTitle}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Revue/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all Revues",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responsData = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Response is an array with at least one item\", function(){\r",
							"    pm.expect(responsData).to.an(\"array\");\r",
							"    pm.expect(responsData.length).to.be.greaterThan(0);\r",
							"})\r",
							"\r",
							"const lastRevueId = responsData[responsData.length - 1].id;\r",
							"pm.collectionVariables.set('lastRevueId', lastRevueId)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Revue/All",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"All"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Created Revue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responsData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response message is 'Edited successfully'\", function(){\r",
							"    pm.expect(responsData.msg).to.eql('Edited successfully');\r",
							"})\r",
							"\r",
							"pm.test(\"Revue title is correct\", function(){\r",
							"    pm.expect(responsData.revue.title).to.eql(\"Edited Revue Name\");\r",
							"    \r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Edited Revue Name\",\r\n    \"description\": \"Edited Revue description\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Revue/Edit?revueId={{lastRevueId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"Edit"
					],
					"query": [
						{
							"key": "revueId",
							"value": "{{lastRevueId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Revue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response msg is 'The revue is deleted!'\", function(){\r",
							"    pm.expect(responseData.msg).to.eql('The revue is deleted!');\r",
							"});\r",
							"\r",
							"const revueTitle = pm.collectionVariables.get(\"randomTitle\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Revue/Delete?revueId={{lastRevueId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"Delete"
					],
					"query": [
						{
							"key": "revueId",
							"value": "{{lastRevueId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://d2925tksfvgq8c.cloudfront.net",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "randomTitle",
			"value": ""
		},
		{
			"key": "lastRevueId",
			"value": ""
		}
	]
}